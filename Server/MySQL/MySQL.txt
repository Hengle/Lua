
------------------------常用----------------------
1 mysql -uroot -p -P3306 -h127.0.0.1
2 SHOW DATABASES/SHOW TABLES/ 
   SELECT * FROM tb1（所有字段值） / SHOW COLUMNS FROM tb1（所有字段属性）
3 SHOW CREATE TABLE tb1 -- 查看引擎是否是innodb，默认编码是否是utf8
4 SHOW INDEXES FROM tb1 \G-- 可查看唯一约束的名字(\G以网格的形式查看)
5 cmd - services.msc --查看服务的名字
6 关闭和打开服务 -- net start/stop + 服务名字


------------------------常用报错----------------------

1 no database seleceted:没有选择数据库；--> use + 数据库


---------------------（一）---MySQL----------------------

1 开源关系型数据库，不需要付费并开源，使用社区足够

2 port:3306 ; 123456 密码；Windows Services Name:MySQL80

3 win+R:services.msc 打开mysql服务

4 目录介绍
bin：可执行文件
data:数据文件，数据库文件索引文件等
include:头文件
lib：库
share:错误消息和字符集

5 创建mysql的默认配置，my.ini,需要制定存储的data位置且不在安装目录内

6  mysqld --initialize --console
2019-05-15T11:55:21.137522Z 0 [System] [MY-013169] [Server] C:\Program Files\MySQL\MySQL Server 8.0\bin\mysqld.exe (mysqld 8.0.16) initializing of server in progress as process 8508
2019-05-15T11:55:21.138447Z 0 [Warning] [MY-013242] [Server] --character-set-server: 'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
2019-05-15T11:55:26.376800Z 5 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: 4cqyPrkwzM=O
2019-05-15T11:55:27.558692Z 0 [System] [MY-013170] [Server] C:\Program Files\MySQL\MySQL Server 8.0\bin\mysqld.exe (mysqld 8.0.16) initializing of server has completed

6 服务的命令行:net start mysql (开服务) / net stop mysql (关服务)

6 初始化数据库:mysqld --initialize --console

7 :修改秘密:mysql -u root -p 

8 默认MySQL用户：
  select user,host,authentication_string from mysql.user;

9 mysql: cmd-> 
   1）mysql -V :版本号 2）mysql -uroot -p -P3306 -h127.0.0.1

10：登录：mysql -uroot -p -P3306 -h127.0.0.1（用户名，输入密码，端口，服务器名）

11：退出 1）mysql>exit; 2)mysql>quit; 3)mysql>\q;

12:   windows清屏：cls

13:   修改mysql提示符: mysql -uroot -p --prompt + 替换的名字

14:   1) select version(); -- 版本
        2) select now(); -- 当前时间
        3) select user(); -- 当前用户

15：语句规范: 1) 关键字与函数名称全部大写 2）数据库名称，表名称，字段名称都小写 3）SQL语句必须分号结尾

16：mysql自带四个数据库

17: CREATE DATABASE IF NOT EXIST t2 CHARACTER SET gbk -- 创建gbk格式的数据库

18：SHOW CREATE DATABASE t2

19: 修改编码方式:ALTER {DATABASE | SCHEMA} [db_name]

20: ALTER DATABASE t2 CHARACTER SET = utf8


----------------------（二）--数据类型数据表----------------------
1 整形:TINYINY,SMALLINT,MEDIUMINT,INT,BIGINT

2 浮点:FLOAT,DOUBLE

3 日期:YEAR,TIME,DATE,DATETIME,TIMESTAMP(时间戳1970-1-1 0点 ---2037年的一个值)

4 字符型:CHAR(255),VACHAR(65535),TINYTEXT(<2^8),TEXT(<2^16),MEDIUMTEXT(<2^24),LONGTEXT,ENUM(65535),SET(64个成员)

5  数据表:行（记录），列（字段）

6  打开数据库：USE + 数据库名称

7  显示当前打开的数据库: SELECT DATABASE();查看数据库 SHOW DATABASES（）

8  CREATE TABLE tb1(username VARCHAR(20),age TINYINT UNSIGNED,salary FLOAT(8,2) UNSIGNED);

9  查看数据表:SHOW TABLES 

10 insert
1）全赋值:INSERT tb1 VALUES('Tom',20,222222.222);
2）单赋值:INSERT tb1 (username,salary) VALUES('John',33333.333)

11 select 
1） SELECT * FROM tb1; -- 查询数据表

12 空值与非空(NULL 与 NOT NULL)
1) CREATE TABLE tb2(usename VARCHAR(20) NOT NULL,age TINYINT UNSIGNED NULL);
2) INSERT tb2 VALUES('TOM',NULL); -- right
3) INSERT tb2 VALUES(NNULL,22); -- right -- error

13 唯一性:AUTO_INCREMENT
1) 这个字段一定是数值型
2）CREATE TABLE tb3(id SMALLINT UNSIGNED AUTO_INCREMENT,username VARCHAR(30) NOT NULL) -- error无主键
3）CREATE TABLE tb3(id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,username VARCHAR(30) NOT NULL) 


14 测试是否主键按顺序增长
1) INSERT tb3 VALUES(22,'Tom');
2) INSERT tb3 VALUES(33,'Gou');
3) INSERT tb3 VALUES(44,'Dom');

15 UNIQUE KEY 唯一约束：可空值
1） 既有主键也有唯一约束的表：
CREATE TABLE tb5(id SMALLINT AUTO_INCREMENT PRIMARY KEY,
username VARCHAR(20) NOT NULL UNIQUE KEY,
age TINYINT UNSIGNED);

2) INSERT tb5(username,age) VALUES('TOM',22)

16 默认约束:DEFAULT

1) CREATE TABLE tb6(id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
 usernme VARCHAR(20) NOT NULL UNIQUE KEY,
 sex ENUM('1','2','3') DEFAULT '3');

2) INSERT tb6(usernme) VALUES('TOM')

----------------------（三）约束-----------------------

1 表级约束（两个或两个以上的字段约束）和列级约束（只针对一个字段）

2 约束类型:NOT NULL;PRIMARY KEY;UNIQUE KEY;DEFAULT:FOREIGN KEY(外键约束)

3 外键约束:FOREIGN KEY 1)保持数据一致性，完整性 ；2）实现一对一或一对多的关系
   这就是关系型数据库的根本原因

4  要求已截图 3-1
1） 注意:外键列和参照列必须具有相似的数据类型，数字的长度是否有符号位必须相同；而字符的长度则可以不同
2）外键列和参照列必须创建索引；如果外键列不存在索引的话，MySQL将自动创建索引

3）数据表的存储引擎必须是innoDB

5  MYSQL目录下的my.ini,查看default- storage- engine = INNODB

6 
1）主表: CREATE TABLE provinces(
id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
pname VARCHAR(20) NOT NULL);

测试:SHOW CREATE TABLE provinces;

2)  子表: CREATE TABLE users(id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
username VARCHAR(10) NOT NULL,
pid SMALLINT UNSIGNED,
FOREIGN KEY (pid) REFERENCES provinces (id));

测试: SHOW INDEXES FROM provinces;
        SHOW INDEXES FROM users\G;

7 外键约束的参照操作：
1）CASECADE，SET NULL，RESTRICT，NO ACTION
2)  INSERT provinces(pname) VALUES('A');
     INSERT provinces(pname) VALUES('B');
     INSERT provinces(pname) VALUES('C');

3)  删除: DELETE FROM provinces WHERE id =2

4 一般不用这种无理的外键约束，实际上只用逻辑外键

5 CREATE TABLE user2(username VARCHAR(10) NOT NULL,pid SMALLINT UNSIGNED);
1) alter table user2 add id smallint unsigned;
2) alter table user2 add constraint PK_user2_id PRIMARY KEY(id);(PK是主键的意思)
3) alter table user2 add foreign key (pid) references provinces (id);
(查看外键约束：show create table user2)
 
6 删除主键约束，唯一约束等等
1) alter table user2 drop PRIMARY KEY; -- 删除主键约束
2) SHOW INDEXES FROM user2 -- 查看所有唯一约束的名字
3) alter table user2 drop foreign key user2_ibfk_1;

7 修改数据表 modify(定义);change (定义和名称)
1）alter table user2 modify id smallint unsigned not null first;
2)  alter table user2 change id iddd smallint unsigned not null first;

8 修改数据表的名字:alter table / rename
1) alter table user2 rename users3;
2) rename table users3 to user2;

9 少使用更改表名和列名；比如存储过程引用过，最好不要修改

----------------------（四）-----------------------

1 update / insert / delete

2 select
1) 使用别名的时候建议使用as关键字
2) select sex from users group by sex
3) select * from users LIMIT 2; -- 返回两条（select是从0开始编号）
4）


























